{"version":3,"sources":["../../../src/components/keyboard.service.ts"],"names":[],"mappings":";;;;;;;;;AAAA,OAAO,EAAA,UAAE,EAAU,MAAM,eAAA,CAAgB;AACzC,OAAO,WAAA,CAAY;AAGnB,IAAa,eAAe;IAG1B;QACE,IAAI,CAAC,SAAS,GAAG,IAAU,SAAU,EAAE,CAAC;IAC1C,CAAC;IAED,6BAAG,GAAH,UAAI,MAAwD;QAC1D,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC,QAAQ,EAAE,QAAQ,CAAC,EAAE,UAAC,KAAoB,EAAE,KAAa;YAC5E,EAAE,CAAC,CAAC,KAAK,CAAC,cAAc,CAAC,CAAC,CAAC;gBACzB,KAAK,CAAC,cAAc,EAAE,CAAC;YACzB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,oBAAoB;gBACpB,KAAK,CAAC,WAAW,GAAG,KAAK,CAAC;YAC5B,CAAC;YACD,MAAM,CAAC,KAAK,EAAE,KAAK,CAAC,CAAC;QACvB,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+BAAK,GAAL;QACE,IAAI,CAAC,SAAS,CAAC,KAAK,EAAE,CAAC;IACzB,CAAC;IACH,sBAAC;AAAD,CAtBA,AAsBC,IAAA;AAtBY,eAAe;IAD3B,UAAU,EAAE;;GACA,eAAe,CAsB3B;SAtBY,eAAe","file":"keyboard.service.js","sourceRoot":"","sourcesContent":["import {Injectable} from '@angular/core';\nimport 'mousetrap';\n\n@Injectable()\nexport class KeyboardService {\n  private mousetrap: MousetrapInstance;\n\n  constructor() {\n    this.mousetrap = new (<any>Mousetrap)();\n  }\n\n  add(onBind: (e: ExtendedKeyboardEvent, combo: string) => any) {\n    this.mousetrap.bind(['ctrl+s', 'meta+s'], (event: KeyboardEvent, combo: string) => {\n      if (event.preventDefault) {\n        event.preventDefault();\n      } else {\n        // internet explorer\n        event.returnValue = false;\n      }\n      onBind(event, combo);\n    });\n  }\n\n  reset() {\n    this.mousetrap.reset();\n  }\n}"]}